---
- name: Install required packages
  when:
    - prometheus_oauth2_static_users | length > 0
  loop:
    - python3-passlib
    - python3-bcrypt
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  tags:
    - prometheus
    - oauth2

- name: Check existing install
  when:
    - prometheus_installation == 'native'
  register: prometheus_oauth2_version_check
  failed_when: false
  changed_when: false
  check_mode: false
  ansible.builtin.shell: /usr/bin/prometheus-oauth2 --version 2>&1
  tags:
    - prometheus
    - oauth2

- name: Fact version change
  when:
    - prometheus_installation == 'native'
  ansible.builtin.set_fact:
    prometheus_oauth2_version_changed: "{{ prometheus_oauth2_version_check.rc != 0 or (prometheus_oauth2_version_check.stdout_lines is defined and prometheus_oauth2_version not in prometheus_oauth2_version_check.stdout_lines[0]) | bool }}"
  tags:
    - prometheus
    - oauth2

- name: Download release tarball
  when:
    - prometheus_installation == 'native'
    - prometheus_oauth2_version_changed
  ansible.builtin.unarchive:
    src: "{{ prometheus_oauth2_download }}"
    dest: /usr/local/src
    remote_src: true
    owner: root
    group: root
  tags:
    - prometheus
    - oauth2

- name: Copy oauth2 binary
  when:
    - prometheus_installation == 'native'
    - prometheus_oauth2_version_changed
    - not ansible_check_mode
  notify:
    - Restart prometheus-oauth2
  ansible.builtin.copy:
    src: "/usr/local/src/oauth2-proxy-v{{ prometheus_oauth2_version }}.linux-{{ prometheus_oauth2_arch }}/oauth2-proxy"
    dest: /usr/bin/prometheus-oauth2
    remote_src: true
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  tags:
    - prometheus
    - oauth2

- name: Write users config
  when:
    - prometheus_oauth2_static_users | length > 0
  loop: "{{ prometheus_oauth2_static_users }}"
  loop_control:
    label: "{{ item.username }}"
  notify:
    - Restart prometheus-oauth2
  community.general.htpasswd:
    path: /etc/prometheus/htpasswd
    name: "{{ item.username }}"
    password: "{{ item.password }}"
    crypt_scheme: bcrypt
    owner: "{{ 'prometheus' if prometheus_installation == 'native' else 'nobody' }}"
    group: "{{ 'prometheus' if prometheus_installation == 'native' else 'nogroup' }}"
    mode: "{{ 'u=rw,g=r,o=' if prometheus_installation == 'native' else 'u=rw,g=r,o=r' }}"
    state: "{{ item.state | default('present') }}"
  tags:
    - prometheus
    - oauth2

- name: Write default config
  notify:
    - Restart prometheus-oauth2
  ansible.builtin.template:
    src: oauth2/default.j2
    dest: /etc/default/prometheus-oauth2
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - prometheus
    - oauth2

- name: Write service file
  notify:
    - Restart prometheus-oauth2
  ansible.builtin.template:
    src: oauth2/service.j2
    dest: /etc/systemd/system/prometheus-oauth2.service
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - prometheus
    - oauth2

- name: Pull docker image
  when:
    - prometheus_installation == 'docker'
    - prometheus_oauth2_pull_image
  community.docker.docker_image:
    name: "{{ prometheus_oauth2_image }}"
    source: pull
  tags:
    - prometheus
    - oauth2

- name: Create docker network
  when:
    - prometheus_installation == 'docker'
    - false if prometheus_oauth2_network is none else (prometheus_oauth2_network | length > 0)
  community.docker.docker_network:
    name: '{{ prometheus_oauth2_network }}'
  tags:
    - prometheus
    - oauth2

- name: Start prometheus-oauth2 service
  ansible.builtin.systemd:
    name: prometheus-oauth2
    state: started
    daemon_reload: true
    masked: false
    enabled: true
  tags:
    - prometheus
    - oauth2

- name: Remove install directory
  when:
    - prometheus_installation == 'native'
  ansible.builtin.file:
    path: "/usr/local/src/oauth2-proxy-v{{ prometheus_oauth2_version }}.linux-{{ prometheus_oauth2_arch }}"
    state: absent
  tags:
    - prometheus
    - oauth2

...
