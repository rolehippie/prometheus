---
- name: Install required packages
  when:
    - prometheus_installation == 'native'
  loop:
    - rsync
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  tags:
    - prometheus

- name: Create system group
  when:
    - prometheus_installation == 'native'
  ansible.builtin.group:
    name: prometheus
    system: True
    state: present
  tags:
    - prometheus

- name: Create system user
  when:
    - prometheus_installation == 'native'
  ansible.builtin.user:
    name: prometheus
    group: prometheus
    password: "!"
    shell: /usr/sbin/nologin
    home: /var/lib/prometheus
    create_home: False
    system: True
    state: present
  tags:
    - prometheus

- name: Create required directories
  loop: "{{ prometheus_default_folders + prometheus_extra_folders }}"
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ 'prometheus' if prometheus_installation == 'native' else 'nobody' }}"
    group: "{{ 'prometheus' if prometheus_installation == 'native' else 'nogroup' }}"
    mode: u=rwx,g=rx,o=rx
    state: directory
  tags:
    - prometheus

- name: Check existing install
  when:
    - prometheus_installation == 'native'
  register: prometheus_version_check
  failed_when: False
  changed_when: False
  check_mode: False
  ansible.builtin.shell: /usr/bin/prometheus --version 2>&1
  tags:
    - prometheus

- name: Fact version change
  when:
    - prometheus_installation == 'native'
  ansible.builtin.set_fact:
    prometheus_version_changed: "{{ prometheus_version_check.rc != 0 or (prometheus_version_check.stdout_lines is defined and prometheus_version not in prometheus_version_check.stdout_lines[0]) | bool }}"
  tags:
    - prometheus

- name: Download release tarball
  when:
    - prometheus_installation == 'native'
    - prometheus_version_changed
  notify:
    - Restart prometheus
  ansible.builtin.unarchive:
    src: "{{ prometheus_download }}"
    dest: /usr/local/src
    remote_src: True
    owner: root
    group: root
  tags:
    - prometheus

- name: Sync libraries folder
  when:
    - prometheus_version is version('3.0.0', '<')
    - prometheus_installation == 'native'
    - prometheus_version_changed
    - not ansible_check_mode
  notify:
    - Restart prometheus
  delegate_to: "{{ inventory_hostname }}"
  ansible.posix.synchronize:
    src: "/usr/local/src/prometheus-{{ prometheus_version }}.linux-amd64/console_libraries"
    dest: /etc/prometheus
    delete: True
    recursive: True
  tags:
    - prometheus

- name: Fix libraries owner
  when:
    - prometheus_version is version('3.0.0', '<')
    - prometheus_installation == 'native'
    - prometheus_version_changed
    - not ansible_check_mode
  notify:
    - Restart prometheus
  ansible.builtin.file:
    path: /etc/prometheus/console_libraries
    owner: prometheus
    group: prometheus
    recurse: True
  tags:
    - prometheus

- name: Drop libraries folder
  when:
    - prometheus_version is version('3.0.0', '>=')
    - prometheus_installation == 'native'
  ansible.builtin.file:
    path: /etc/prometheus/console_libraries
    state: absent
  tags:
    - prometheus

- name: Sync consoles folder
  when:
    - prometheus_version is version('3.0.0', '<')
    - prometheus_installation == 'native'
    - prometheus_version_changed
    - not ansible_check_mode
  notify:
    - Restart prometheus
  delegate_to: "{{ inventory_hostname }}"
  ansible.posix.synchronize:
    src: "/usr/local/src/prometheus-{{ prometheus_version }}.linux-amd64/consoles"
    dest: /etc/prometheus
    delete: True
    recursive: True
  tags:
    - prometheus

- name: Fix consoles owner
  when:
    - prometheus_version is version('3.0.0', '<')
    - prometheus_installation == 'native'
    - prometheus_version_changed
    - not ansible_check_mode
  notify:
    - Restart prometheus
  ansible.builtin.file:
    path: /etc/prometheus/consoles
    owner: prometheus
    group: prometheus
    recurse: True
  tags:
    - prometheus

- name: Drop consoles folder
  when:
    - prometheus_version is version('3.0.0', '>=')
    - prometheus_installation == 'native'
  ansible.builtin.file:
    path: /etc/prometheus/consoles
    state: absent
  tags:
    - prometheus

- name: Copy downloaded binaries
  when:
    - prometheus_installation == 'native'
    - prometheus_version_changed
    - not ansible_check_mode
  notify:
    - Restart prometheus
  loop:
    - prometheus
    - promtool
  ansible.builtin.copy:
    src: "/usr/local/src/prometheus-{{ prometheus_version }}.linux-amd64/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    remote_src: True
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  tags:
    - prometheus

- name: Drop tsdb binary
  when:
    - prometheus_installation == 'native'
  ansible.builtin.file:
    path: /usr/bin/tsdb
    state: absent
  tags:
    - prometheus

- name: Write general config
  notify:
    - Restart prometheus
  ansible.builtin.template:
    src: config.j2
    dest: /etc/prometheus/config.yml
    owner: "{{ 'prometheus' if prometheus_installation == 'native' else 'nobody' }}"
    group: "{{ 'prometheus' if prometheus_installation == 'native' else 'nogroup' }}"
    mode: u=rw,g=r,o=r
  tags:
    - prometheus

- name: Rule from url
  notify:
    - Restart prometheus
  loop: "{{ prometheus_default_rules + prometheus_extra_rules }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.url | default(False) and item.state | default("present") == "present"
  ansible.builtin.get_url:
    url: "{{ item.url }}"
    dest: "{{ item.path | default('/etc/prometheus/rules') }}/{{ item.name }}.yml"
    owner: "{{ 'prometheus' if prometheus_installation == 'native' else 'nobody' }}"
    group: "{{ 'prometheus' if prometheus_installation == 'native' else 'nogroup' }}"
    mode: o=rw,g=r,o=r
  tags:
    - prometheus

- name: Rule from content
  notify:
    - Restart prometheus
  loop: "{{ prometheus_default_rules + prometheus_extra_rules }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.content | default(False) and item.state | default("present") == "present"
  ansible.builtin.copy:
    content: "{{ item.content }}"
    dest: "{{ item.path | default('/etc/prometheus/rules') }}/{{ item.name }}.yml"
    owner: "{{ 'prometheus' if prometheus_installation == 'native' else 'nobody' }}"
    group: "{{ 'prometheus' if prometheus_installation == 'native' else 'nogroup' }}"
    mode: o=rw,g=r,o=r
  tags:
    - prometheus

- name: Rule from file
  notify:
    - Restart prometheus
  loop: "{{ prometheus_default_rules + prometheus_extra_rules }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.src | default(False) and item.state | default("present") == "present"
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.path | default('/etc/prometheus/rules') }}/{{ item.name }}.yml"
    owner: "{{ 'prometheus' if prometheus_installation == 'native' else 'nobody' }}"
    group: "{{ 'prometheus' if prometheus_installation == 'native' else 'nogroup' }}"
    mode: o=rw,g=r,o=r
  tags:
    - prometheus

- name: Delete defined rules
  notify:
    - Restart prometheus
  loop: "{{ prometheus_default_rules + prometheus_extra_rules }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.state | default("present") == "absent"
  ansible.builtin.file:
    path: "{{ item.path | default('/etc/prometheus/rules') }}/{{ item.name }}.yml"
    state: absent
  tags:
    - prometheus

- name: Write default config
  notify:
    - Restart prometheus
  ansible.builtin.template:
    src: default.j2
    dest: /etc/default/prometheus
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - prometheus

- name: Write service file
  notify:
    - Restart prometheus
  ansible.builtin.template:
    src: service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - prometheus

- name: Pull docker image
  when:
    - prometheus_installation == 'docker'
    - prometheus_pull_image
  community.docker.docker_image:
    name: "{{ prometheus_image }}"
    source: pull
  tags:
    - prometheus

- name: Create docker network
  when:
    - prometheus_installation == 'docker'
    - prometheus_network | default(False)
  community.docker.docker_network:
    name: '{{ prometheus_network }}'
  tags:
    - prometheus

- name: Start prometheus service
  ansible.builtin.systemd:
    name: prometheus
    state: started
    daemon_reload: True
    masked: False
    enabled: True
  tags:
    - prometheus

- name: Remove install directory
  when:
    - prometheus_installation == 'native'
  ansible.builtin.file:
    path: "/usr/local/src/prometheus-{{ prometheus_version }}.linux-amd64"
    state: absent
  tags:
    - prometheus

- name: Include oauth2 tasks
  when: prometheus_oauth2_enabled | default(False)
  ansible.builtin.include_tasks: oauth2.yml
  tags:
    - prometheus
    - oauth2

...
